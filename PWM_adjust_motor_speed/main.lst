CCS PCM C Compiler, Version 5.115, 43599               31-Mar-25 11:11

               Filename:   D:\Embedded\Projects\PIC16F877A\PWM Adjust motor speed\main.lst

               ROM used:   470 words (6%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           20 (5%) worst case
               Stack used: 3 locations
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   18D
0003:  NOP
.................... 
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  3F
0009:  RETLW  06
000A:  RETLW  5B
000B:  RETLW  4F
000C:  RETLW  66
000D:  RETLW  6D
000E:  RETLW  7D
000F:  RETLW  07
0010:  RETLW  7F
0011:  RETLW  6F
0012:  MOVF   2A,W
0013:  XORWF  2C,W
0014:  ANDLW  80
0015:  MOVWF  2E
0016:  BTFSS  2A.7
0017:  GOTO   01D
0018:  COMF   29,F
0019:  COMF   2A,F
001A:  INCF   29,F
001B:  BTFSC  03.2
001C:  INCF   2A,F
001D:  BTFSS  2C.7
001E:  GOTO   024
001F:  COMF   2B,F
0020:  COMF   2C,F
0021:  INCF   2B,F
0022:  BTFSC  03.2
0023:  INCF   2C,F
0024:  CLRF   78
0025:  CLRF   79
0026:  CLRF   77
0027:  CLRF   7A
0028:  MOVF   2C,W
0029:  BTFSS  03.2
002A:  GOTO   02E
002B:  MOVF   2B,W
002C:  BTFSC  03.2
002D:  GOTO   048
002E:  MOVLW  10
002F:  MOVWF  2D
0030:  BCF    03.0
0031:  RLF    29,F
0032:  RLF    2A,F
0033:  RLF    77,F
0034:  RLF    7A,F
0035:  MOVF   2C,W
0036:  SUBWF  7A,W
0037:  BTFSS  03.2
0038:  GOTO   03B
0039:  MOVF   2B,W
003A:  SUBWF  77,W
003B:  BTFSS  03.0
003C:  GOTO   044
003D:  MOVF   2B,W
003E:  SUBWF  77,F
003F:  BTFSS  03.0
0040:  DECF   7A,F
0041:  MOVF   2C,W
0042:  SUBWF  7A,F
0043:  BSF    03.0
0044:  RLF    78,F
0045:  RLF    79,F
0046:  DECFSZ 2D,F
0047:  GOTO   030
0048:  BTFSS  2E.7
0049:  GOTO   04F
004A:  COMF   78,F
004B:  COMF   79,F
004C:  INCF   78,F
004D:  BTFSC  03.2
004E:  INCF   79,F
004F:  RETURN
*
00CE:  MOVF   26,W
00CF:  XORWF  28,W
00D0:  ANDLW  80
00D1:  MOVWF  2A
00D2:  BTFSS  26.7
00D3:  GOTO   0D9
00D4:  COMF   25,F
00D5:  COMF   26,F
00D6:  INCF   25,F
00D7:  BTFSC  03.2
00D8:  INCF   26,F
00D9:  BTFSS  28.7
00DA:  GOTO   0E0
00DB:  COMF   27,F
00DC:  COMF   28,F
00DD:  INCF   27,F
00DE:  BTFSC  03.2
00DF:  INCF   28,F
00E0:  MOVLW  10
00E1:  MOVWF  29
00E2:  CLRF   77
00E3:  CLRF   7A
00E4:  RRF    26,F
00E5:  RRF    25,F
00E6:  BTFSS  03.0
00E7:  GOTO   0EE
00E8:  MOVF   27,W
00E9:  ADDWF  77,F
00EA:  BTFSC  03.0
00EB:  INCF   7A,F
00EC:  MOVF   28,W
00ED:  ADDWF  7A,F
00EE:  RRF    7A,F
00EF:  RRF    77,F
00F0:  RRF    79,F
00F1:  RRF    78,F
00F2:  DECFSZ 29,F
00F3:  GOTO   0E4
00F4:  BTFSS  2A.7
00F5:  GOTO   0FB
00F6:  COMF   78,F
00F7:  COMF   79,F
00F8:  INCF   78,F
00F9:  BTFSC  03.2
00FA:  INCF   79,F
00FB:  RETURN
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=20000000)
*
0088:  MOVLW  26
0089:  MOVWF  04
008A:  BCF    03.7
008B:  MOVF   00,W
008C:  BTFSC  03.2
008D:  GOTO   09B
008E:  MOVLW  06
008F:  MOVWF  78
0090:  CLRF   77
0091:  DECFSZ 77,F
0092:  GOTO   091
0093:  DECFSZ 78,F
0094:  GOTO   090
0095:  MOVLW  7B
0096:  MOVWF  77
0097:  DECFSZ 77,F
0098:  GOTO   097
0099:  DECFSZ 00,F
009A:  GOTO   08E
009B:  RETURN
.................... 
.................... #fuses hs, nowdt, put, noprotect, nolvp
.................... 
.................... #define up PIN_B0
.................... #define stop PIN_B1
.................... #define down PIN_B2
.................... 
.................... unsigned int ma_ch, ma_dv;
.................... signed int16 capdo=0;
.................... const unsigned char ma7doan[10] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f};
.................... 
.................... void giaima_capdo_2so_xvn(signed int16 x)
.................... {
....................    ma_dv = ma7doan[x % 10];
*
0050:  MOVF   26,W
0051:  MOVWF  2A
0052:  MOVF   25,W
0053:  MOVWF  29
0054:  CLRF   2C
0055:  MOVLW  0A
0056:  MOVWF  2B
0057:  CALL   012
0058:  MOVF   77,W
0059:  MOVWF  27
005A:  MOVF   7A,W
005B:  MOVWF  28
005C:  MOVWF  7A
005D:  MOVF   77,W
005E:  CALL   004
005F:  MOVWF  78
0060:  MOVWF  21
....................    ma_ch = ma7doan[x / 10 % 10];
0061:  MOVF   26,W
0062:  MOVWF  2A
0063:  MOVF   25,W
0064:  MOVWF  29
0065:  CLRF   2C
0066:  MOVLW  0A
0067:  MOVWF  2B
0068:  CALL   012
0069:  MOVF   79,W
006A:  MOVWF  28
006B:  MOVF   78,W
006C:  MOVWF  27
006D:  MOVF   79,W
006E:  MOVWF  2A
006F:  MOVF   78,W
0070:  MOVWF  29
0071:  CLRF   2C
0072:  MOVLW  0A
0073:  MOVWF  2B
0074:  CALL   012
0075:  MOVF   77,W
0076:  MOVWF  27
0077:  MOVF   7A,W
0078:  MOVWF  28
0079:  MOVWF  7A
007A:  MOVF   77,W
007B:  CALL   004
007C:  MOVWF  78
007D:  MOVWF  20
....................    if (x < 10) ma_ch = 0x00;
007E:  BTFSC  26.7
007F:  GOTO   086
0080:  MOVF   26,F
0081:  BTFSS  03.2
0082:  GOTO   087
0083:  MOVF   25,W
0084:  SUBLW  09
0085:  BTFSC  03.0
0086:  CLRF   20
0087:  RETURN
.................... }
.................... 
.................... void hienthi_capdo() 
.................... {
....................    output_d (ma_dv) ;
*
009C:  BSF    03.5
009D:  CLRF   08
009E:  BCF    03.5
009F:  MOVF   21,W
00A0:  MOVWF  08
....................    output_high (PIN_C0) ;
00A1:  BCF    24.0
00A2:  MOVF   24,W
00A3:  BSF    03.5
00A4:  MOVWF  07
00A5:  BCF    03.5
00A6:  BSF    07.0
....................    delay_ms (1) ;
00A7:  MOVLW  01
00A8:  MOVWF  26
00A9:  CALL   088
....................    output_low (PIN_C0) ;
00AA:  BCF    24.0
00AB:  MOVF   24,W
00AC:  BSF    03.5
00AD:  MOVWF  07
00AE:  BCF    03.5
00AF:  BCF    07.0
....................    output_d (ma_ch) ;
00B0:  BSF    03.5
00B1:  CLRF   08
00B2:  BCF    03.5
00B3:  MOVF   20,W
00B4:  MOVWF  08
....................    output_high (PIN_C1) ;
00B5:  BCF    24.1
00B6:  MOVF   24,W
00B7:  BSF    03.5
00B8:  MOVWF  07
00B9:  BCF    03.5
00BA:  BSF    07.1
....................    delay_ms (1) ;
00BB:  MOVLW  01
00BC:  MOVWF  26
00BD:  CALL   088
....................    output_low (PIN_C1) ;
00BE:  BCF    24.1
00BF:  MOVF   24,W
00C0:  BSF    03.5
00C1:  MOVWF  07
00C2:  BCF    03.5
00C3:  BCF    07.1
00C4:  RETURN
.................... }
.................... 
.................... void delay_hienthi() 
.................... {
....................    unsigned int j;
....................    for (j = 0; j < 10; j++) hienthi_capdo ();
00C5:  CLRF   25
00C6:  MOVF   25,W
00C7:  SUBLW  09
00C8:  BTFSS  03.0
00C9:  GOTO   0CD
00CA:  CALL   09C
00CB:  INCF   25,F
00CC:  GOTO   0C6
00CD:  RETURN
.................... }
.................... 
.................... void phim_up() 
.................... {
....................    if (!input (up))
*
00FC:  BSF    03.5
00FD:  BSF    06.0
00FE:  BCF    03.5
00FF:  BTFSC  06.0
0100:  GOTO   139
....................    {
....................       delay_hienthi () ;
0101:  CALL   0C5
.................... 
....................       if (!input (up))
0102:  BSF    03.5
0103:  BSF    06.0
0104:  BCF    03.5
0105:  BTFSC  06.0
0106:  GOTO   139
....................       {
....................          if (capdo < 20)
0107:  BTFSC  23.7
0108:  GOTO   110
0109:  MOVF   23,F
010A:  BTFSS  03.2
010B:  GOTO   139
010C:  MOVF   22,W
010D:  SUBLW  13
010E:  BTFSS  03.0
010F:  GOTO   139
....................          {
....................             capdo++;
0110:  INCF   22,F
0111:  BTFSC  03.2
0112:  INCF   23,F
....................             set_pwm1_duty (capdo * 50) ;
0113:  MOVF   23,W
0114:  MOVWF  26
0115:  MOVF   22,W
0116:  MOVWF  25
0117:  CLRF   28
0118:  MOVLW  32
0119:  MOVWF  27
011A:  CALL   0CE
011B:  MOVF   79,W
011C:  MOVWF  26
011D:  MOVF   78,W
011E:  MOVWF  25
011F:  RRF    26,F
0120:  RRF    25,F
0121:  RRF    26,F
0122:  RRF    25,F
0123:  RRF    26,F
0124:  MOVF   25,W
0125:  MOVWF  15
0126:  RRF    26,F
0127:  RRF    26,W
0128:  ANDLW  30
0129:  MOVWF  77
012A:  MOVF   17,W
012B:  ANDLW  CF
012C:  IORWF  77,W
012D:  MOVWF  17
....................             giaima_capdo_2so_xvn (capdo);
012E:  MOVF   23,W
012F:  MOVWF  26
0130:  MOVF   22,W
0131:  MOVWF  25
0132:  CALL   050
....................             do hienthi_capdo () ;
0133:  CALL   09C
....................             while (!input (up));
0134:  BSF    03.5
0135:  BSF    06.0
0136:  BCF    03.5
0137:  BTFSS  06.0
0138:  GOTO   133
....................          }
....................       }
....................    }
0139:  BCF    0A.3
013A:  BCF    0A.4
013B:  GOTO   1D1 (RETURN)
.................... }
.................... 
....................    
.................... void phim_down() 
.................... {
....................    if (!input (down))
013C:  BSF    03.5
013D:  BSF    06.2
013E:  BCF    03.5
013F:  BTFSC  06.2
0140:  GOTO   17A
....................    {
....................       delay_hienthi () ;
0141:  CALL   0C5
.................... 
....................       if (!input (down))
0142:  BSF    03.5
0143:  BSF    06.2
0144:  BCF    03.5
0145:  BTFSC  06.2
0146:  GOTO   17A
....................       {
....................          if (capdo > 0)
0147:  BTFSC  23.7
0148:  GOTO   17A
0149:  MOVF   23,F
014A:  BTFSS  03.2
014B:  GOTO   150
014C:  MOVF   22,W
014D:  SUBLW  00
014E:  BTFSC  03.0
014F:  GOTO   17A
....................          {
....................             capdo--;
0150:  MOVF   22,W
0151:  BTFSC  03.2
0152:  DECF   23,F
0153:  DECF   22,F
....................             set_pwm1_duty (capdo * 50) ;
0154:  MOVF   23,W
0155:  MOVWF  26
0156:  MOVF   22,W
0157:  MOVWF  25
0158:  CLRF   28
0159:  MOVLW  32
015A:  MOVWF  27
015B:  CALL   0CE
015C:  MOVF   79,W
015D:  MOVWF  26
015E:  MOVF   78,W
015F:  MOVWF  25
0160:  RRF    26,F
0161:  RRF    25,F
0162:  RRF    26,F
0163:  RRF    25,F
0164:  RRF    26,F
0165:  MOVF   25,W
0166:  MOVWF  15
0167:  RRF    26,F
0168:  RRF    26,W
0169:  ANDLW  30
016A:  MOVWF  77
016B:  MOVF   17,W
016C:  ANDLW  CF
016D:  IORWF  77,W
016E:  MOVWF  17
....................             giaima_capdo_2so_xvn (capdo);
016F:  MOVF   23,W
0170:  MOVWF  26
0171:  MOVF   22,W
0172:  MOVWF  25
0173:  CALL   050
....................             do hienthi_capdo () ;
0174:  CALL   09C
....................             while (!input (down));
0175:  BSF    03.5
0176:  BSF    06.2
0177:  BCF    03.5
0178:  BTFSS  06.2
0179:  GOTO   174
....................          }
....................       }
....................    }
017A:  BCF    0A.3
017B:  BCF    0A.4
017C:  GOTO   1D2 (RETURN)
.................... }
.................... 
....................    
.................... void phim_stop() 
.................... {
....................    if (!input (stop))
017D:  BSF    03.5
017E:  BSF    06.1
017F:  BCF    03.5
0180:  BTFSC  06.1
0181:  GOTO   18A
....................    {
....................       capdo = 0;
0182:  CLRF   23
0183:  CLRF   22
....................       set_pwm1_duty (0);
0184:  CLRF   15
....................       giaima_capdo_2so_xvn (capdo);
0185:  MOVF   23,W
0186:  MOVWF  26
0187:  MOVF   22,W
0188:  MOVWF  25
0189:  CALL   050
....................    }
018A:  BCF    0A.3
018B:  BCF    0A.4
018C:  GOTO   1D3 (RETURN)
.................... }
.................... 
.................... void main()
018D:  MOVF   03,W
018E:  ANDLW  1F
018F:  MOVWF  03
0190:  CLRF   23
0191:  CLRF   22
0192:  MOVLW  FF
0193:  MOVWF  24
0194:  BSF    03.5
0195:  BSF    1F.0
0196:  BSF    1F.1
0197:  BSF    1F.2
0198:  BCF    1F.3
0199:  MOVLW  07
019A:  MOVWF  1C
019B:  BCF    03.7
.................... {
....................    set_tris_b (0xff);
019C:  MOVLW  FF
019D:  MOVWF  06
....................    set_tris_d (0x00);
019E:  MOVLW  00
019F:  MOVWF  08
....................    set_tris_c (0x00);
01A0:  MOVWF  07
01A1:  BCF    03.5
01A2:  MOVWF  24
....................    output_c (0x00);
01A3:  MOVWF  24
01A4:  BSF    03.5
01A5:  CLRF   07
01A6:  BCF    03.5
01A7:  CLRF   07
....................    output_d (0x00);
01A8:  BSF    03.5
01A9:  CLRF   08
01AA:  BCF    03.5
01AB:  CLRF   08
....................    output_high (PIN_C4);
01AC:  BCF    24.4
01AD:  MOVF   24,W
01AE:  BSF    03.5
01AF:  MOVWF  07
01B0:  BCF    03.5
01B1:  BSF    07.4
....................    output_low (PIN_C2);
01B2:  BCF    24.2
01B3:  MOVF   24,W
01B4:  BSF    03.5
01B5:  MOVWF  07
01B6:  BCF    03.5
01B7:  BCF    07.2
....................    setup_ccp1 (CCP_PWM);
01B8:  BCF    24.2
01B9:  MOVF   24,W
01BA:  BSF    03.5
01BB:  MOVWF  07
01BC:  BCF    03.5
01BD:  BCF    07.2
01BE:  MOVLW  0C
01BF:  MOVWF  17
....................    setup_timer_2 (T2_DIV_BY_16, 249, 1);
01C0:  MOVLW  00
01C1:  MOVWF  78
01C2:  IORLW  06
01C3:  MOVWF  12
01C4:  MOVLW  F9
01C5:  BSF    03.5
01C6:  MOVWF  12
....................    capdo = 0;
01C7:  BCF    03.5
01C8:  CLRF   23
01C9:  CLRF   22
....................    set_pwm1_duty (0);
01CA:  CLRF   15
....................    giaima_capdo_2so_xvn (capdo);
01CB:  MOVF   23,W
01CC:  MOVWF  26
01CD:  MOVF   22,W
01CE:  MOVWF  25
01CF:  CALL   050
.................... 
....................    while (TRUE)
....................    {
....................       phim_up () ;
01D0:  GOTO   0FC
....................       phim_down () ;
01D1:  GOTO   13C
....................       phim_stop () ;
01D2:  GOTO   17D
....................       hienthi_capdo () ;
01D3:  CALL   09C
01D4:  GOTO   1D0
....................    }
.................... }
.................... 
01D5:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
