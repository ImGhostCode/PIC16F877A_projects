CCS PCM C Compiler, Version 5.115, 43599               12-Mar-25 19:30

               Filename:   D:\Embedded\Projects\PIC16F877A\Turn on and off led using button\main.lst

               ROM used:   40 words (0%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... 
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=6000000)
.................... 
.................... 
.................... #fuses hs, nowdt, put, noprotect, nolvp
.................... #use delay(clock=6MHz)
.................... #define on PIN_B0
.................... #define off PIN_B1
.................... 
.................... void main()
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
.................... {
....................    set_tris_b (0x03);
000F:  MOVLW  03
0010:  MOVWF  06
....................    set_tris_d (0x00);
0011:  MOVLW  00
0012:  MOVWF  08
.................... 
....................    while (TRUE)
....................    {
....................       output_d (0xff);
0013:  CLRF   08
0014:  MOVLW  FF
0015:  BCF    03.5
0016:  MOVWF  08
....................       while (input (on)) ;
0017:  BSF    03.5
0018:  BSF    06.0
0019:  BCF    03.5
001A:  BTFSC  06.0
001B:  GOTO   017
....................       output_d (0x00);
001C:  BSF    03.5
001D:  CLRF   08
001E:  BCF    03.5
001F:  CLRF   08
....................       while (input (off));
0020:  BSF    03.5
0021:  BSF    06.1
0022:  BCF    03.5
0023:  BTFSC  06.1
0024:  GOTO   020
0025:  BSF    03.5
0026:  GOTO   013
....................    }
.................... }
.................... 
0027:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
