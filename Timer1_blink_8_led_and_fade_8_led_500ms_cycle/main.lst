CCS PCM C Compiler, Version 5.115, 43599               20-Mar-25 11:29

               Filename:   D:\Embedded\Projects\PIC16F877A\Timer1 500ms 8 led chop tat 8 led sang tat dan pst\main.lst

               ROM used:   172 words (2%)
                           Largest free fragment is 2048
               RAM used:   16 (4%) at main() level
                           17 (5%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   050
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #fuses hs, nowdt, put, noprotect, nolvp
.................... #use delay(clock=6MHz)
*
003B:  MOVLW  2B
003C:  MOVWF  04
003D:  BCF    03.7
003E:  MOVF   00,W
003F:  BTFSC  03.2
0040:  GOTO   04F
0041:  MOVLW  01
0042:  MOVWF  78
0043:  CLRF   77
0044:  DECFSZ 77,F
0045:  GOTO   044
0046:  DECFSZ 78,F
0047:  GOTO   043
0048:  MOVLW  F1
0049:  MOVWF  77
004A:  DECFSZ 77,F
004B:  GOTO   04A
004C:  NOP
004D:  DECFSZ 00,F
004E:  GOTO   041
004F:  RETURN
.................... #bit tmr1if = 0x0c.0
.................... unsigned INT d,b,i;
.................... 
.................... #INT_timer1
.................... void interupt_timer1() 
.................... {
.................... 
....................    d = ~d;
*
0031:  COMF   27,F
....................    output_d (d) ;
0032:  BSF    03.5
0033:  CLRF   08
0034:  BCF    03.5
0035:  MOVF   27,W
0036:  MOVWF  08
0037:  BCF    0C.0
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   01D
.................... }
.................... 
.................... void main()
*
0050:  MOVF   03,W
0051:  ANDLW  1F
0052:  MOVWF  03
0053:  BSF    03.5
0054:  BSF    1F.0
0055:  BSF    1F.1
0056:  BSF    1F.2
0057:  BCF    1F.3
0058:  MOVLW  07
0059:  MOVWF  1C
005A:  BCF    03.7
.................... {
....................    set_tris_b(0x00);
005B:  MOVLW  00
005C:  MOVWF  06
....................    b = 0xff;
005D:  MOVLW  FF
005E:  BCF    03.5
005F:  MOVWF  28
....................    output_b (b) ;
0060:  BSF    03.5
0061:  CLRF   06
0062:  BCF    03.5
0063:  MOVF   28,W
0064:  MOVWF  06
....................    set_tris_d (0x00) ;
0065:  MOVLW  00
0066:  BSF    03.5
0067:  MOVWF  08
....................    d = 0xff;
0068:  MOVLW  FF
0069:  BCF    03.5
006A:  MOVWF  27
....................    output_d (d) ;
006B:  BSF    03.5
006C:  CLRF   08
006D:  BCF    03.5
006E:  MOVF   27,W
006F:  MOVWF  08
....................    setup_timer_1 (T1_INTERNAL|T1_DIV_BY_8) ;
0070:  MOVLW  B5
0071:  MOVWF  10
....................    set_timer1 (18658) ;
0072:  CLRF   0E
0073:  MOVLW  48
0074:  MOVWF  0F
0075:  MOVLW  E2
0076:  MOVWF  0E
0077:  NOP
....................    tmr1if= 0;
0078:  BCF    0C.0
....................    enable_interrupts (GLOBAL) ;
0079:  MOVLW  C0
007A:  IORWF  0B,F
....................    enable_interrupts (INT_TIMER1) ;
007B:  BSF    03.5
007C:  BSF    0C.0
....................    
....................     WHILE (TRUE)
....................    {
....................       FOR (i = 0; i < 8; i++)
007D:  BCF    03.5
007E:  CLRF   29
007F:  MOVF   29,W
0080:  SUBLW  07
0081:  BTFSS  03.0
0082:  GOTO   093
....................       {
....................          b = (b<<1);
0083:  BCF    03.0
0084:  RLF    28,F
....................          output_b (b) ;
0085:  BSF    03.5
0086:  CLRF   06
0087:  BCF    03.5
0088:  MOVF   28,W
0089:  MOVWF  06
....................          delay_ms (300) ;
008A:  MOVLW  02
008B:  MOVWF  2A
008C:  MOVLW  96
008D:  MOVWF  2B
008E:  CALL   03B
008F:  DECFSZ 2A,F
0090:  GOTO   08C
0091:  INCF   29,F
0092:  GOTO   07F
....................       }
.................... 
....................       FOR (i = 0; i < 8; i++)
0093:  CLRF   29
0094:  MOVF   29,W
0095:  SUBLW  07
0096:  BTFSS  03.0
0097:  GOTO   0AA
....................       {
....................          b = (b<<1) + 1;
0098:  BCF    03.0
0099:  RLF    28,W
009A:  ADDLW  01
009B:  MOVWF  28
....................          output_b (b) ;
009C:  BSF    03.5
009D:  CLRF   06
009E:  BCF    03.5
009F:  MOVF   28,W
00A0:  MOVWF  06
....................          delay_ms (300) ;
00A1:  MOVLW  02
00A2:  MOVWF  2A
00A3:  MOVLW  96
00A4:  MOVWF  2B
00A5:  CALL   03B
00A6:  DECFSZ 2A,F
00A7:  GOTO   0A3
00A8:  INCF   29,F
00A9:  GOTO   094
....................       }
00AA:  GOTO   07E
....................    }
.................... }
.................... // 16bit => 65,536
00AB:  SLEEP
.................... // 6MHz => 1/4 => 1.5MHz => 1/8 => 187.5kHz => 5.33us
.................... //   250ms / 5.33us = 93,808
.................... // TMR1= 65,536 - 46,878 = 18,658
.................... 
.................... 
.................... 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
