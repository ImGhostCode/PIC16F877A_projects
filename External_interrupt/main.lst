CCS PCM C Compiler, Version 5.115, 43599               23-Mar-25 11:30

               Filename:   D:\Embedded\Projects\PIC16F877A\External Interrupt\main.lst

               ROM used:   237 words (3%)
                           Largest free fragment is 2048
               RAM used:   19 (5%) at main() level
                           22 (6%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B0
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   03D
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
002F:  BCF    0A.0
0030:  BCF    0A.1
0031:  BCF    0A.2
0032:  ADDWF  02,F
0033:  RETLW  3F
0034:  RETLW  06
0035:  RETLW  5B
0036:  RETLW  4F
0037:  RETLW  66
0038:  RETLW  6D
0039:  RETLW  7D
003A:  RETLW  07
003B:  RETLW  7F
003C:  RETLW  6F
*
0046:  MOVF   2F,W
0047:  CLRF   78
0048:  SUBWF  2E,W
0049:  BTFSC  03.0
004A:  GOTO   04E
004B:  MOVF   2E,W
004C:  MOVWF  77
004D:  GOTO   05A
004E:  CLRF   77
004F:  MOVLW  08
0050:  MOVWF  30
0051:  RLF    2E,F
0052:  RLF    77,F
0053:  MOVF   2F,W
0054:  SUBWF  77,W
0055:  BTFSC  03.0
0056:  MOVWF  77
0057:  RLF    78,F
0058:  DECFSZ 30,F
0059:  GOTO   051
005A:  RETURN
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=6000000)
*
0072:  MOVLW  2D
0073:  MOVWF  04
0074:  BCF    03.7
0075:  MOVF   00,W
0076:  BTFSC  03.2
0077:  GOTO   086
0078:  MOVLW  01
0079:  MOVWF  78
007A:  CLRF   77
007B:  DECFSZ 77,F
007C:  GOTO   07B
007D:  DECFSZ 78,F
007E:  GOTO   07A
007F:  MOVLW  F1
0080:  MOVWF  77
0081:  DECFSZ 77,F
0082:  GOTO   081
0083:  NOP
0084:  DECFSZ 00,F
0085:  GOTO   078
0086:  RETURN
.................... #fuses hs, nowdt, put, noprotect, nolvp
.................... 
.................... unsigned INT count, ma_ch, ma_dv, i;
.................... int1 int0;
.................... const unsigned char ma7doan[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}; 
.................... 
.................... #int_ext
.................... void interrupt_int0()
.................... {
....................    IF (!input (PIN_B0))
*
003D:  BSF    03.5
003E:  BSF    06.0
003F:  BCF    03.5
0040:  BTFSS  06.0
....................    {
....................       int0 = 1;
0041:  BSF    2B.0
....................    }
0042:  BCF    0B.1
0043:  BCF    0A.3
0044:  BCF    0A.4
0045:  GOTO   01B
.................... }
.................... 
.................... void giaima_2so_xvn(unsigned int8 x) 
.................... {
....................    ma_dv = ma7doan[x % 10]; 
*
005B:  MOVF   2D,W
005C:  MOVWF  2E
005D:  MOVLW  0A
005E:  MOVWF  2F
005F:  CALL   046
0060:  MOVF   77,W
0061:  CALL   02F
0062:  MOVWF  78
0063:  MOVWF  29
....................    ma_ch = ma7doan[x / 10];
0064:  MOVF   2D,W
0065:  MOVWF  2E
0066:  MOVLW  0A
0067:  MOVWF  2F
0068:  CALL   046
0069:  MOVF   78,W
006A:  CALL   02F
006B:  MOVWF  78
006C:  MOVWF  28
.................... 
....................    // N?u s? ch? có 1 ch? s?, t?t hàng ch?c
....................    if (x < 10)
006D:  MOVF   2D,W
006E:  SUBLW  09
006F:  BTFSC  03.0
....................    {
....................       ma_ch = 0x00;
0070:  CLRF   28
....................    }
0071:  RETURN
.................... }
.................... 
.................... void hienthi_2so_quet() 
.................... {
....................    // Hi?n th? hàng don v?
....................    output_d(ma_dv);
*
0087:  BSF    03.5
0088:  CLRF   08
0089:  BCF    03.5
008A:  MOVF   29,W
008B:  MOVWF  08
....................    output_high(PIN_C0);
008C:  BCF    2C.0
008D:  MOVF   2C,W
008E:  BSF    03.5
008F:  MOVWF  07
0090:  BCF    03.5
0091:  BSF    07.0
....................    delay_ms(2);
0092:  MOVLW  02
0093:  MOVWF  2D
0094:  CALL   072
....................    output_low(PIN_C0);
0095:  BCF    2C.0
0096:  MOVF   2C,W
0097:  BSF    03.5
0098:  MOVWF  07
0099:  BCF    03.5
009A:  BCF    07.0
.................... 
....................    // Hi?n th? hàng ch?c
....................    output_d(ma_ch);
009B:  BSF    03.5
009C:  CLRF   08
009D:  BCF    03.5
009E:  MOVF   28,W
009F:  MOVWF  08
....................    output_high(PIN_C1);
00A0:  BCF    2C.1
00A1:  MOVF   2C,W
00A2:  BSF    03.5
00A3:  MOVWF  07
00A4:  BCF    03.5
00A5:  BSF    07.1
....................    delay_ms(2);
00A6:  MOVLW  02
00A7:  MOVWF  2D
00A8:  CALL   072
....................    output_low(PIN_C1);
00A9:  BCF    2C.1
00AA:  MOVF   2C,W
00AB:  BSF    03.5
00AC:  MOVWF  07
00AD:  BCF    03.5
00AE:  BCF    07.1
00AF:  RETURN
.................... }
.................... 
.................... void main()
00B0:  MOVF   03,W
00B1:  ANDLW  1F
00B2:  MOVWF  03
00B3:  MOVLW  FF
00B4:  MOVWF  2C
00B5:  BSF    03.5
00B6:  BSF    1F.0
00B7:  BSF    1F.1
00B8:  BSF    1F.2
00B9:  BCF    1F.3
00BA:  MOVLW  07
00BB:  MOVWF  1C
00BC:  BCF    03.7
.................... {
....................    set_tris_b (0x01) ;
00BD:  MOVLW  01
00BE:  MOVWF  06
....................    set_tris_d (0x00) ;
00BF:  MOVLW  00
00C0:  MOVWF  08
....................    set_tris_c (0x00) ;
00C1:  MOVWF  07
00C2:  BCF    03.5
00C3:  MOVWF  2C
....................    output_d(0x00);
00C4:  BSF    03.5
00C5:  CLRF   08
00C6:  BCF    03.5
00C7:  CLRF   08
....................    
....................   // port_b_pullups(0x01);
....................    enable_interrupts (INT_EXT_H2L) ;
00C8:  BSF    0B.4
00C9:  BSF    03.5
00CA:  BCF    01.6
....................    count = 0; int0 = 0;
00CB:  BCF    03.5
00CC:  CLRF   27
00CD:  BCF    2B.0
....................    WHILE (TRUE)
....................    {
....................       enable_interrupts (GLOBAL) ;
00CE:  MOVLW  C0
00CF:  IORWF  0B,F
....................       giaima_2so_xvn (count) ;
00D0:  MOVF   27,W
00D1:  MOVWF  2D
00D2:  CALL   05B
....................       hienthi_2so_quet () ;
00D3:  CALL   087
.................... 
....................       IF (int0 == 1)
00D4:  BTFSS  2B.0
00D5:  GOTO   0EB
....................       {
....................          disable_interrupts (GLOBAL) ;
00D6:  BCF    0B.6
00D7:  BCF    0B.7
00D8:  BTFSC  0B.7
00D9:  GOTO   0D7
....................          count++; int0 = 0;
00DA:  INCF   27,F
00DB:  BCF    2B.0
....................          IF (count > 99) count = 0;
00DC:  MOVF   27,W
00DD:  SUBLW  63
00DE:  BTFSS  03.0
00DF:  CLRF   27
....................          giaima_2so_xvn (count) ;
00E0:  MOVF   27,W
00E1:  MOVWF  2D
00E2:  CALL   05B
....................          FOR (i = 0; i < 50; i++)
00E3:  CLRF   2A
00E4:  MOVF   2A,W
00E5:  SUBLW  31
00E6:  BTFSS  03.0
00E7:  GOTO   0EB
....................          {
....................             hienthi_2so_quet () ;
00E8:  CALL   087
00E9:  INCF   2A,F
00EA:  GOTO   0E4
....................          }
....................       }
00EB:  GOTO   0CE
....................    }
.................... }
.................... 
00EC:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
